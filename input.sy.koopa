global @var0 = alloc i32
fun @func(@x0: i32): i32 {

%block_entry1:
%1 = load @var0
%2 = load @x0
%3 = add %1, %2
%4 = load @var0
store %3, %4
%5 = load @var0
ret %4
}

fun @main(): i32 {

%block_entry23:
@a2 = alloc i32, 1
@b2 = alloc i32, -5
@c2 = alloc i32, 3
jump %block_entry3

%block_entry3:
@a2 = alloc i32, 0
%6 = load @a2
%7 = load @b2
li %8, 2
%9 = div %7, %8
%10 = add %6, %9
%11 = load @a2
store %10, %11
jump %block_entry4

%block_entry4:
jump %if_entry5

%if_entry5:
%12 = load @a2
li %13, 2
%14 = eq %12, %13
%15 = load @a2
li %16, 4
%17 = ge %15, %16
%18 = or %14, %17
br %18, %if_body6, %else_body7

%if_body6:
jump %block_entry8

%block_entry8:
li %19, 0
ret %18

%block_entry9:
jump %if_end10

%else_body7:
jump %block_entry11

%block_entry11:
%20 = load @a2
li %21, 1
%22 = add %20, %21
%23 = load @b2
store %22, %23
jump %block_entry12

%block_entry12:
jump %if_end10

%if_end10:
@i12 = alloc i32, 0
@pow12 = alloc i32, 1
jump %while_entry13

%while_entry13:
%24 = load @i12
li %25, 7
%26 = lt %24, %25
br %26, %while_body14, %while_end15

%while_body14:
jump %block_entry21

%block_entry21:
%27 = load @pow12
li %28, 2
%29 = mul %27, %28
%30 = load @pow12
store %29, %30
%31 = load @i12
li %32, 1
%33 = add %31, %32
%34 = load @i12
store %33, %34
jump %if_entry16

%if_entry16:
%35 = load @i12
li %36, 3
%37 = gt %35, %36
br %37, %if_body17, %if_end18

%if_body17:
jump %block_entry19

%block_entry19:
jump %while_end15

%block_entry20:
jump %if_end18

%if_end18:
jump %block_entry22

%block_entry22:
jump %while_entry13

%while_end15:
%38 = load @var0
li %39, 10
%40 = mul %38, %39
%41 = load @var0
store %40, %41
li %45, 6
%44 = xor -1, %43
%43 = sub 0, %42
%42 = sub 0, %41
ret %41
}
